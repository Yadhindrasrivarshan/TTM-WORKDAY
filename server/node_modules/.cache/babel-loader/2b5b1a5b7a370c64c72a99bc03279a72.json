{"ast":null,"code":"var _jsxFileName = \"C:\\\\React1\\\\workday-project\\\\src\\\\App.js\",\n    _s = $RefreshSig$();\n\nimport { BrowserRouter as Router, Switch, Route, Redirect } from 'react-router-dom';\nimport React, { useState } from 'react';\nimport Layout from './components/Layout';\nimport Login from './Login-fire/Login.js';\nimport PersonalDetails from './pages/PersonalDetails';\nimport SkillSet from './pages/SkillSet';\nimport TeamDetails from './pages/TeamDetails';\nimport { useLocation } from 'react-router-dom';\nimport PrivateRoute from './Login-fire/PrivateRoute';\nimport SignUp from './Login-fire/SignUp';\nimport { app } from './mockfirebase';\nimport ViewDetails from './pages/ViewDetails.js';\nimport { AuthProvider } from './Login-fire/Auth';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  let location = useLocation();\n  var user = app.auth().currentUser;\n\n  if (user) {\n    console.log(user.uid);\n  } // let [toggle,setToggle]=useState(false)\n\n\n  let toggle;\n\n  if (user) {\n    toggle = true;\n  } else {\n    toggle = false;\n  }\n\n  return /*#__PURE__*/_jsxDEV(AuthProvider, {\n    children: [location.pathname === '/login' && /*#__PURE__*/_jsxDEV(Route, {\n      exact: true,\n      path: \"/login\",\n      component: Login\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 42\n    }, this), location.pathname === '/signup' && /*#__PURE__*/_jsxDEV(Route, {\n      exact: true,\n      path: \"/signup\",\n      component: SignUp\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 43\n    }, this), location.pathname === '/viewdetails' && /*#__PURE__*/_jsxDEV(PrivateRoute, {\n      exact: true,\n      path: \"/viewdetails\",\n      component: ViewDetails\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 46\n    }, this), location.pathname !== '/login' && location.pathname !== '/signup' && location.pathname !== '/viewdetails' && /*#__PURE__*/_jsxDEV(Layout, {\n      children: /*#__PURE__*/_jsxDEV(Switch, {\n        children: [/*#__PURE__*/_jsxDEV(PrivateRoute, {\n          exact: true,\n          path: \"/\",\n          children: /*#__PURE__*/_jsxDEV(PersonalDetails, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 44,\n            columnNumber: 16\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 14\n        }, this), /*#__PURE__*/_jsxDEV(PrivateRoute, {\n          path: \"/skillset\",\n          exact: true,\n          children: /*#__PURE__*/_jsxDEV(SkillSet, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 47,\n            columnNumber: 16\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 14\n        }, this), /*#__PURE__*/_jsxDEV(PrivateRoute, {\n          path: \"/teamdetails\",\n          exact: true,\n          children: /*#__PURE__*/_jsxDEV(TeamDetails, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 50,\n            columnNumber: 16\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 14\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 12\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 12\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 3\n  }, this);\n} //{location.pathname==='/' && <Route path='/login' component={()=><Redirect to='/login'/>}}\n\n\n_s(App, \"pkHmaVRPskBaU4tMJuJJpV42k1I=\", false, function () {\n  return [useLocation];\n});\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["C:/React1/workday-project/src/App.js"],"names":["BrowserRouter","Router","Switch","Route","Redirect","React","useState","Layout","Login","PersonalDetails","SkillSet","TeamDetails","useLocation","PrivateRoute","SignUp","app","ViewDetails","AuthProvider","App","location","user","auth","currentUser","console","log","uid","toggle","pathname"],"mappings":";;;AAAA,SAASA,aAAa,IAAIC,MAA1B,EAAkCC,MAAlC,EAA0CC,KAA1C,EAAiDC,QAAjD,QAAiE,kBAAjE;AAEA,OAAOC,KAAP,IAAcC,QAAd,QAA6B,OAA7B;AACA,OAAOC,MAAP,MAAmB,qBAAnB;AACA,OAAOC,KAAP,MAAkB,uBAAlB;AACA,OAAOC,eAAP,MAA4B,yBAA5B;AACA,OAAOC,QAAP,MAAqB,kBAArB;AACA,OAAOC,WAAP,MAAwB,qBAAxB;AACA,SAAQC,WAAR,QAA0B,kBAA1B;AACA,OAAOC,YAAP,MAAyB,2BAAzB;AACA,OAAOC,MAAP,MAAmB,qBAAnB;AACA,SAAQC,GAAR,QAAkB,gBAAlB;AACA,OAAOC,WAAP,MAAwB,wBAAxB;AACA,SAAQC,YAAR,QAA2B,mBAA3B;;;AAEA,SAASC,GAAT,GAAe;AAAA;;AACb,MAAIC,QAAQ,GAACP,WAAW,EAAxB;AAEA,MAAIQ,IAAI,GAACL,GAAG,CAACM,IAAJ,GAAWC,WAApB;;AAEA,MAAGF,IAAH,EAAQ;AACNG,IAAAA,OAAO,CAACC,GAAR,CAAYJ,IAAI,CAACK,GAAjB;AACD,GAPY,CAQb;;;AACA,MAAIC,MAAJ;;AAED,MAAGN,IAAH,EAAQ;AACNM,IAAAA,MAAM,GAAC,IAAP;AACD,GAFD,MAGI;AACDA,IAAAA,MAAM,GAAC,KAAP;AACF;;AAGA,sBACA,QAAC,YAAD;AAAA,eACMP,QAAQ,CAACQ,QAAT,KAAoB,QAApB,iBAAiC,QAAC,KAAD;AAAO,MAAA,KAAK,MAAZ;AAAa,MAAA,IAAI,EAAC,QAAlB;AAA2B,MAAA,SAAS,EAAEnB;AAAtC;AAAA;AAAA;AAAA;AAAA,YADvC,EAEMW,QAAQ,CAACQ,QAAT,KAAoB,SAApB,iBAAkC,QAAC,KAAD;AAAO,MAAA,KAAK,MAAZ;AAAa,MAAA,IAAI,EAAC,SAAlB;AAA4B,MAAA,SAAS,EAAEb;AAAvC;AAAA;AAAA;AAAA;AAAA,YAFxC,EAGKK,QAAQ,CAACQ,QAAT,KAAoB,cAApB,iBAAsC,QAAC,YAAD;AAAc,MAAA,KAAK,MAAnB;AAAoB,MAAA,IAAI,EAAC,cAAzB;AAAwC,MAAA,SAAS,EAAEX;AAAnD;AAAA;AAAA;AAAA;AAAA,YAH3C,EAIKG,QAAQ,CAACQ,QAAT,KAAoB,QAApB,IAAgCR,QAAQ,CAACQ,QAAT,KAAoB,SAApD,IAAiER,QAAQ,CAACQ,QAAT,KAAoB,cAArF,iBACI,QAAC,MAAD;AAAA,6BACA,QAAC,MAAD;AAAA,gCACE,QAAC,YAAD;AAAc,UAAA,KAAK,MAAnB;AAAoB,UAAA,IAAI,EAAC,GAAzB;AAAA,iCACE,QAAC,eAAD;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,gBADF,eAIE,QAAC,YAAD;AAAc,UAAA,IAAI,EAAC,WAAnB;AAA+B,UAAA,KAAK,MAApC;AAAA,iCACE,QAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,gBAJF,eAOE,QAAC,YAAD;AAAc,UAAA,IAAI,EAAC,cAAnB;AAAkC,UAAA,KAAK,MAAvC;AAAA,iCACE,QAAC,WAAD;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,gBAPF;AAAA;AAAA;AAAA;AAAA;AAAA;AADA;AAAA;AAAA;AAAA;AAAA,YALT;AAAA;AAAA;AAAA;AAAA;AAAA,UADA;AA4BD,C,CACD;;;GAhDST,G;UACMN,W;;;KADNM,G;AAkDT,eAAeA,GAAf","sourcesContent":["import { BrowserRouter as Router, Switch, Route, Redirect } from 'react-router-dom'\r\n\r\nimport React,{useState} from 'react';\r\nimport Layout from './components/Layout'\r\nimport Login from './Login-fire/Login.js'\r\nimport PersonalDetails from './pages/PersonalDetails';\r\nimport SkillSet from './pages/SkillSet';\r\nimport TeamDetails from './pages/TeamDetails';\r\nimport {useLocation} from 'react-router-dom'\r\nimport PrivateRoute from './Login-fire/PrivateRoute';\r\nimport SignUp from './Login-fire/SignUp';\r\nimport {app} from './mockfirebase'\r\nimport ViewDetails from './pages/ViewDetails.js'\r\nimport {AuthProvider} from './Login-fire/Auth'\r\n\r\nfunction App() {\r\n  let location=useLocation()\r\n\r\n  var user=app.auth().currentUser\r\n\r\n  if(user){\r\n    console.log(user.uid);\r\n  }\r\n  // let [toggle,setToggle]=useState(false)\r\n  let toggle\r\n\r\n if(user){\r\n   toggle=true\r\n }\r\n else{\r\n    toggle=false\r\n }\r\n\r\n  \r\n  return (\r\n  <AuthProvider>\r\n      { location.pathname==='/login' &&  <Route exact path=\"/login\" component={Login}/>}\r\n      { location.pathname==='/signup' &&  <Route exact path=\"/signup\" component={SignUp} />}\r\n      {location.pathname==='/viewdetails' && <PrivateRoute exact path='/viewdetails' component={ViewDetails}/>}\r\n      {location.pathname!=='/login' && location.pathname!=='/signup' && location.pathname!=='/viewdetails' &&\r\n           <Layout>\r\n           <Switch>\r\n             <PrivateRoute exact path=\"/\">\r\n               <PersonalDetails/>\r\n             </PrivateRoute>\r\n             <PrivateRoute path=\"/skillset\" exact>\r\n               <SkillSet/>\r\n             </PrivateRoute>\r\n             <PrivateRoute path=\"/teamdetails\" exact> \r\n               <TeamDetails/>\r\n             </PrivateRoute>\r\n             {/* <PrivateRoute path=\"/viewdetails\" exact> \r\n               <ViewDetails/>\r\n             </PrivateRoute> */}\r\n           </Switch>\r\n           </Layout>\r\n        \r\n          }\r\n          \r\n\r\n   </AuthProvider>\r\n  );\r\n}\r\n//{location.pathname==='/' && <Route path='/login' component={()=><Redirect to='/login'/>}}\r\n\r\nexport default App;\r\n\r\n"]},"metadata":{},"sourceType":"module"}