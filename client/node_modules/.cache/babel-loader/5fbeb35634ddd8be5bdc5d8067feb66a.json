{"ast":null,"code":"var _jsxFileName = \"C:\\\\React1\\\\TTM-WORKDAY\\\\client\\\\src\\\\pages\\\\TeamDetails.js\";\nimport { Button, TextField } from \"@material-ui/core\";\nimport React, { Component } from \"react\";\nimport \"./TeamDetails.css\";\nimport { app, database, fire } from \"../mockfirebase\";\nimport { ListItem, ListItemIcon, ListItemText } from \"@material-ui/core\";\nimport \"../components/Todo.css\";\nimport GroupIcon from \"@material-ui/icons/Group\";\nimport DeleteIcon from \"@material-ui/icons/Delete\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst formValid = ({\n  formErrors,\n  ...rest\n}) => {\n  let valid = true; // validate form errors being empty\n\n  Object.values(formErrors).forEach(val => {\n    val.length > 0 && (valid = false);\n  }); // validate the form was filled out\n\n  Object.values(rest).forEach(val => {\n    val === null && (valid = false);\n  });\n  return valid;\n};\n\nclass TeamDetails extends Component {\n  constructor(props) {\n    super(props);\n\n    this.handleclear = () => {\n      document.getElementById(\"form\").reset();\n    };\n\n    this.handleSubmit = e => {\n      e.preventDefault();\n\n      if (formValid(this.state)) {\n        var list1 = [];\n        this.state.list.map(item => {\n          list1.push(item.value);\n        });\n        console.log(`\n        --SUBMITTING--\n        TeamName: ${this.state.TeamName}\n        Divisions: ${this.state.division}\n        Experience: ${this.state.experience}\n        Role: ${this.state.role}\n        DateOfJoining:${this.state.DateOfJoining},\n        List:${list1}\n      `);\n      } else {\n        console.error(\"FORM INVALID - DISPLAY ERROR MESSAGE\");\n      }\n\n      if (formValid(this.state)) {\n        var list1 = [];\n        this.state.list.map(item => {\n          list1.push(item.value);\n        });\n        const details = {\n          TeamName: this.state.TeamName,\n          Division: this.state.division,\n          Experience: this.state.experience,\n          Role: this.state.role,\n          DateOfJoining: this.state.DateOfJoining,\n          PrevTeams: list1\n        };\n        database.collection(\"TeamDetails\").doc(app.auth().currentUser.uid).set(details).then(() => {\n          console.log(\"TeamDetails have been submitted successfully 😁😎\");\n        }).catch(error => {\n          alert(error.message);\n        });\n      }\n    };\n\n    this.printDatas = () => {\n      database.collection(\"teamdetails\").get().then(snapshot => {\n        snapshot.docs.forEach(doc => {\n          console.log(doc.data());\n        });\n      });\n    };\n\n    this.handleChange = e => {\n      e.preventDefault();\n      const {\n        name,\n        value\n      } = e.target;\n      let formErrors = { ...this.state.formErrors\n      };\n\n      switch (name) {\n        case \"TeamName\":\n          formErrors.TeamName = value.length < 3 ? \"TEAM name must be in expanded form or it should not be less than 3 characters\" : \"\";\n          break;\n\n        case \"division\":\n          formErrors.division = value.length < 3 ? \"DOMAIN/DIVISION name should be atleast three characters\" : \"\";\n          break;\n\n        case \"experience\":\n          formErrors.experience = Number(value) < 0 ? \"Enter your experience correctly ,as experience wont be in negative value\" : \"\";\n          break;\n\n        case \"role\":\n          formErrors.role = value.length < 6 ? \"Kindly enter your role correctly\" : \"\";\n          break;\n\n        default:\n          break;\n      }\n\n      this.setState({\n        formErrors,\n        [name]: value\n      }, () => console.log(this.state));\n    };\n\n    this.state = {\n      TeamName: null,\n      division: null,\n      experience: null,\n      role: null,\n      DateOfJoining: null,\n      newItem: \"\",\n      list: [],\n      formErrors: {\n        TeamName: \"\",\n        division: \"\",\n        experience: \"\",\n        role: \"\"\n      }\n    };\n  }\n\n  updateInput(key, value) {\n    // update react state\n    this.setState({\n      [key]: value\n    });\n  }\n\n  addItem() {\n    // create a new item with unique id\n    const newItem = {\n      id: 1 + Math.random(),\n      value: this.state.newItem.slice()\n    }; // copy current list of items\n\n    const list = [...this.state.list]; // add the new item to the list\n\n    list.push(newItem); // update state with new list, reset the new item input\n\n    var list2 = [];\n    list.map(item => {\n      console.log(item.value);\n      list2.push(item.value);\n    });\n    this.setState({\n      list,\n      newItem: \"\"\n    });\n  }\n\n  deleteItem(id) {\n    // copy current list of items\n    const list = [...this.state.list]; // filter out the item being deleted\n\n    const updatedList = list.filter(item => item.id !== id);\n    this.setState({\n      list: updatedList\n    });\n  }\n\n  render() {\n    const {\n      formErrors\n    } = this.state;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"wrTeamDetailser\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"h1\", {\n          style: {\n            textAlign: \"left\"\n          },\n          children: [\"Team details\", \" \", /*#__PURE__*/_jsxDEV(React.Fragment, {\n            children: [/*#__PURE__*/_jsxDEV(Button, {\n              variant: \"contained\",\n              style: {\n                marginRight: \"20px\",\n                marginLeft: \"770px\",\n                marginBottom: \"10px\"\n              },\n              color: \"primary\",\n              onClick: this.handleSubmit,\n              children: \"Submit\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 196,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Button, {\n              variant: \"contained\",\n              style: {\n                marginRight: \"0px\",\n                marginBottom: \"10px\"\n              },\n              color: \"secondary\",\n              onClick: this.handleclear,\n              children: \"Clear\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 209,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 195,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 192,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 191,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-wrTeamDetailser\",\n        children: /*#__PURE__*/_jsxDEV(\"form\", {\n          onSubmit: this.handleSubmit,\n          noValidate: true,\n          id: \"form\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"firstName\",\n            children: [/*#__PURE__*/_jsxDEV(TextField, {\n              variant: \"outlined\",\n              label: \"Team-Name\",\n              autoComplete: \"off\",\n              type: \"text\",\n              name: \"TeamName\",\n              noValidate: true,\n              onChange: this.handleChange\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 224,\n              columnNumber: 15\n            }, this), formErrors.TeamName.length > 0 && /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"errorMessage\",\n              children: formErrors.TeamName\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 234,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 223,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"lastName\",\n            children: /*#__PURE__*/_jsxDEV(TextField, {\n              variant: \"outlined\",\n              required: true,\n              name: \"DateOfJoining\",\n              label: \"Date of Joining\",\n              required: true,\n              type: \"date\",\n              format: \"MM/dd/yyyy\",\n              onChange: this.handleChange,\n              InputLabelProps: {\n                shrink: true\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 238,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 237,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"firstName\",\n            children: [/*#__PURE__*/_jsxDEV(TextField, {\n              variant: \"outlined\",\n              label: \"Division/Domain\",\n              autoComplete: \"off\",\n              type: \"text\",\n              name: \"division\",\n              noValidate: true,\n              onChange: this.handleChange\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 253,\n              columnNumber: 15\n            }, this), formErrors.division.length > 0 && /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"errorMessage\",\n              children: formErrors.division\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 263,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 252,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"lastName\",\n            children: [/*#__PURE__*/_jsxDEV(TextField, {\n              variant: \"outlined\",\n              label: \"Enter the no of years in the current team\",\n              type: \"number\",\n              autoComplete: \"off\",\n              name: \"experience\",\n              noValidate: true,\n              onChange: this.handleChange\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 267,\n              columnNumber: 15\n            }, this), formErrors.experience.length > 0 && /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"errorMessage\",\n              children: formErrors.experience\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 277,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 266,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"email\",\n            children: [/*#__PURE__*/_jsxDEV(TextField, {\n              variant: \"outlined\",\n              label: \"Eg: Software Engineer\",\n              autoComplete: \"off\",\n              type: \"text\",\n              name: \"role\",\n              noValidate: true,\n              onChange: this.handleChange\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 282,\n              columnNumber: 15\n            }, this), formErrors.role.length > 0 && /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"errorMessage\",\n              children: formErrors.role\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 292,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 281,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              width: \"100%\"\n            },\n            children: /*#__PURE__*/_jsxDEV(_Fragment, {\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                children: /*#__PURE__*/_jsxDEV(\"div\", {\n                  children: [/*#__PURE__*/_jsxDEV(TextField, {\n                    label: \"Enter Previous TeamName\",\n                    variant: \"outlined\",\n                    style: {\n                      width: \"800px\",\n                      marginRight: \"10px\"\n                    },\n                    type: \"text\",\n                    value: this.state.newItem,\n                    onChange: e => this.updateInput(\"newItem\", e.target.value)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 299,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(Button, {\n                    className: \"btn\",\n                    color: \"primary\",\n                    variant: \"contained\",\n                    onClick: () => this.addItem(),\n                    disabled: !this.state.newItem.length,\n                    children: /*#__PURE__*/_jsxDEV(\"i\", {\n                      className: \"material-icons\",\n                      style: {\n                        marginTop: \"10px\",\n                        paddingBottom: \"5px\"\n                      },\n                      children: \"Add Team-Name\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 316,\n                      columnNumber: 23\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 309,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 323,\n                    columnNumber: 21\n                  }, this), \" \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 323,\n                    columnNumber: 28\n                  }, this), /*#__PURE__*/_jsxDEV(\"ol\", {\n                    children: this.state.list.map(item => {\n                      return /*#__PURE__*/_jsxDEV(ListItem, {\n                        style: {\n                          border: \"1px solid black\",\n                          width: \"700px\",\n                          borderRadius: \"5px\"\n                        },\n                        children: [/*#__PURE__*/_jsxDEV(ListItemIcon, {\n                          children: /*#__PURE__*/_jsxDEV(GroupIcon, {\n                            color: \"primary\"\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 336,\n                            columnNumber: 31\n                          }, this)\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 335,\n                          columnNumber: 29\n                        }, this), /*#__PURE__*/_jsxDEV(ListItemText, {\n                          primary: \"TeamName:  \" + item.value\n                        }, item.key, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 338,\n                          columnNumber: 29\n                        }, this), /*#__PURE__*/_jsxDEV(Button, {\n                          color: \"secondary\",\n                          children: /*#__PURE__*/_jsxDEV(DeleteIcon, {\n                            fontSize: \"small\",\n                            onClick: () => this.deleteItem(item.id)\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 344,\n                            columnNumber: 33\n                          }, this)\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 342,\n                          columnNumber: 29\n                        }, this)]\n                      }, item.key, true, {\n                        fileName: _jsxFileName,\n                        lineNumber: 327,\n                        columnNumber: 27\n                      }, this);\n                    })\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 324,\n                    columnNumber: 21\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 298,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 297,\n                columnNumber: 17\n              }, this)\n            }, void 0, false)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 295,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            variant: \"outlined\",\n            onClick: this.printDatas,\n            children: \"click me\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 358,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 222,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 221,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 190,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default TeamDetails;","map":{"version":3,"sources":["C:/React1/TTM-WORKDAY/client/src/pages/TeamDetails.js"],"names":["Button","TextField","React","Component","app","database","fire","ListItem","ListItemIcon","ListItemText","GroupIcon","DeleteIcon","formValid","formErrors","rest","valid","Object","values","forEach","val","length","TeamDetails","constructor","props","handleclear","document","getElementById","reset","handleSubmit","e","preventDefault","state","list1","list","map","item","push","value","console","log","TeamName","division","experience","role","DateOfJoining","error","details","Division","Experience","Role","PrevTeams","collection","doc","auth","currentUser","uid","set","then","catch","alert","message","printDatas","get","snapshot","docs","data","handleChange","name","target","Number","setState","newItem","updateInput","key","addItem","id","Math","random","slice","list2","deleteItem","updatedList","filter","render","textAlign","marginRight","marginLeft","marginBottom","shrink","width","marginTop","paddingBottom","border","borderRadius"],"mappings":"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","sourcesContent":["import { Button, TextField } from \"@material-ui/core\";\r\nimport React, { Component } from \"react\";\r\nimport \"./TeamDetails.css\";\r\n\r\nimport { app, database, fire } from \"../mockfirebase\";\r\nimport { ListItem, ListItemIcon, ListItemText } from \"@material-ui/core\";\r\nimport \"../components/Todo.css\";\r\nimport GroupIcon from \"@material-ui/icons/Group\";\r\n\r\nimport DeleteIcon from \"@material-ui/icons/Delete\";\r\n\r\nconst formValid = ({ formErrors, ...rest }) => {\r\n  let valid = true;\r\n  // validate form errors being empty\r\n  Object.values(formErrors).forEach((val) => {\r\n    val.length > 0 && (valid = false);\r\n  });\r\n\r\n  // validate the form was filled out\r\n  Object.values(rest).forEach((val) => {\r\n    val === null && (valid = false);\r\n  });\r\n\r\n  return valid;\r\n};\r\n\r\nclass TeamDetails extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      TeamName: null,\r\n      division: null,\r\n      experience: null,\r\n      role: null,\r\n      DateOfJoining: null,\r\n      newItem: \"\",\r\n      list: [],\r\n\r\n      formErrors: {\r\n        TeamName: \"\",\r\n        division: \"\",\r\n        experience: \"\",\r\n        role: \"\",\r\n      },\r\n    };\r\n  }\r\n\r\n  handleclear = () => {\r\n    document.getElementById(\"form\").reset();\r\n  };\r\n\r\n  updateInput(key, value) {\r\n    // update react state\r\n    this.setState({ [key]: value });\r\n  }\r\n\r\n  addItem() {\r\n    // create a new item with unique id\r\n    const newItem = {\r\n      id: 1 + Math.random(),\r\n      value: this.state.newItem.slice(),\r\n    };\r\n\r\n    // copy current list of items\r\n    const list = [...this.state.list];\r\n\r\n    // add the new item to the list\r\n    list.push(newItem);\r\n\r\n    // update state with new list, reset the new item input\r\n    var list2 = [];\r\n    list.map((item) => {\r\n      console.log(item.value);\r\n      list2.push(item.value);\r\n    });\r\n\r\n    this.setState({\r\n      list,\r\n      newItem: \"\",\r\n    });\r\n  }\r\n\r\n  deleteItem(id) {\r\n    // copy current list of items\r\n    const list = [...this.state.list];\r\n    // filter out the item being deleted\r\n    const updatedList = list.filter((item) => item.id !== id);\r\n\r\n    this.setState({ list: updatedList });\r\n  }\r\n\r\n  handleSubmit = (e) => {\r\n    e.preventDefault();\r\n\r\n    if (formValid(this.state)) {\r\n      var list1 = [];\r\n      this.state.list.map((item) => {\r\n        list1.push(item.value);\r\n      });\r\n      console.log(`\r\n        --SUBMITTING--\r\n        TeamName: ${this.state.TeamName}\r\n        Divisions: ${this.state.division}\r\n        Experience: ${this.state.experience}\r\n        Role: ${this.state.role}\r\n        DateOfJoining:${this.state.DateOfJoining},\r\n        List:${list1}\r\n      `);\r\n    } else {\r\n      console.error(\"FORM INVALID - DISPLAY ERROR MESSAGE\");\r\n    }\r\n\r\n    if (formValid(this.state)) {\r\n      var list1 = [];\r\n      this.state.list.map((item) => {\r\n        list1.push(item.value);\r\n      });\r\n      const details = {\r\n        TeamName: this.state.TeamName,\r\n        Division: this.state.division,\r\n        Experience: this.state.experience,\r\n        Role: this.state.role,\r\n        DateOfJoining: this.state.DateOfJoining,\r\n        PrevTeams: list1,\r\n      };\r\n      database\r\n        .collection(\"TeamDetails\")\r\n        .doc(app.auth().currentUser.uid)\r\n        .set(details)\r\n        .then(() => {\r\n          console.log(\"TeamDetails have been submitted successfully 😁😎\");\r\n        })\r\n        .catch((error) => {\r\n          alert(error.message);\r\n        });\r\n    }\r\n  };\r\n\r\n  printDatas = () => {\r\n    database\r\n      .collection(\"teamdetails\")\r\n      .get()\r\n      .then((snapshot) => {\r\n        snapshot.docs.forEach((doc) => {\r\n          console.log(doc.data());\r\n        });\r\n      });\r\n  };\r\n\r\n  handleChange = (e) => {\r\n    e.preventDefault();\r\n    const { name, value } = e.target;\r\n    let formErrors = { ...this.state.formErrors };\r\n\r\n    switch (name) {\r\n      case \"TeamName\":\r\n        formErrors.TeamName =\r\n          value.length < 3\r\n            ? \"TEAM name must be in expanded form or it should not be less than 3 characters\"\r\n            : \"\";\r\n        break;\r\n      case \"division\":\r\n        formErrors.division =\r\n          value.length < 3\r\n            ? \"DOMAIN/DIVISION name should be atleast three characters\"\r\n            : \"\";\r\n        break;\r\n      case \"experience\":\r\n        formErrors.experience =\r\n          Number(value) < 0\r\n            ? \"Enter your experience correctly ,as experience wont be in negative value\"\r\n            : \"\";\r\n        break;\r\n      case \"role\":\r\n        formErrors.role =\r\n          value.length < 6 ? \"Kindly enter your role correctly\" : \"\";\r\n        break;\r\n      default:\r\n        break;\r\n    }\r\n\r\n    this.setState({ formErrors, [name]: value }, () => console.log(this.state));\r\n  };\r\n\r\n  render() {\r\n    const { formErrors } = this.state;\r\n\r\n    return (\r\n      <div className=\"wrTeamDetailser\">\r\n        <div>\r\n          <h1 style={{ textAlign: \"left\" }}>\r\n            Team details{\" \"}\r\n            {\r\n              <React.Fragment>\r\n                <Button\r\n                  variant=\"contained\"\r\n                  style={{\r\n                    marginRight: \"20px\",\r\n                    marginLeft: \"770px\",\r\n                    marginBottom: \"10px\",\r\n                  }}\r\n                  color=\"primary\"\r\n                  onClick={this.handleSubmit}\r\n                >\r\n                  Submit\r\n                </Button>\r\n\r\n                <Button\r\n                  variant=\"contained\"\r\n                  style={{ marginRight: \"0px\", marginBottom: \"10px\" }}\r\n                  color=\"secondary\"\r\n                  onClick={this.handleclear}\r\n                >\r\n                  Clear\r\n                </Button>\r\n              </React.Fragment>\r\n            }\r\n          </h1>\r\n        </div>\r\n        <div className=\"form-wrTeamDetailser\">\r\n          <form onSubmit={this.handleSubmit} noValidate id=\"form\">\r\n            <div className=\"firstName\">\r\n              <TextField\r\n                variant=\"outlined\"\r\n                label=\"Team-Name\"\r\n                autoComplete=\"off\"\r\n                type=\"text\"\r\n                name=\"TeamName\"\r\n                noValidate\r\n                onChange={this.handleChange}\r\n              />\r\n              {formErrors.TeamName.length > 0 && (\r\n                <span className=\"errorMessage\">{formErrors.TeamName}</span>\r\n              )}\r\n            </div>\r\n            <div className=\"lastName\">\r\n              <TextField\r\n                variant=\"outlined\"\r\n                required\r\n                name=\"DateOfJoining\"\r\n                label=\"Date of Joining\"\r\n                required\r\n                type=\"date\"\r\n                format=\"MM/dd/yyyy\"\r\n                onChange={this.handleChange}\r\n                InputLabelProps={{\r\n                  shrink: true,\r\n                }}\r\n              />\r\n            </div>\r\n            <div className=\"firstName\">\r\n              <TextField\r\n                variant=\"outlined\"\r\n                label=\"Division/Domain\"\r\n                autoComplete=\"off\"\r\n                type=\"text\"\r\n                name=\"division\"\r\n                noValidate\r\n                onChange={this.handleChange}\r\n              />\r\n              {formErrors.division.length > 0 && (\r\n                <span className=\"errorMessage\">{formErrors.division}</span>\r\n              )}\r\n            </div>\r\n            <div className=\"lastName\">\r\n              <TextField\r\n                variant=\"outlined\"\r\n                label=\"Enter the no of years in the current team\"\r\n                type=\"number\"\r\n                autoComplete=\"off\"\r\n                name=\"experience\"\r\n                noValidate\r\n                onChange={this.handleChange}\r\n              />\r\n              {formErrors.experience.length > 0 && (\r\n                <span className=\"errorMessage\">{formErrors.experience}</span>\r\n              )}\r\n            </div>\r\n\r\n            <div className=\"email\">\r\n              <TextField\r\n                variant=\"outlined\"\r\n                label=\"Eg: Software Engineer\"\r\n                autoComplete=\"off\"\r\n                type=\"text\"\r\n                name=\"role\"\r\n                noValidate\r\n                onChange={this.handleChange}\r\n              />\r\n              {formErrors.role.length > 0 && (\r\n                <span className=\"errorMessage\">{formErrors.role}</span>\r\n              )}\r\n            </div>\r\n            <div style={{ width: \"100%\" }}>\r\n              <>\r\n                <div>\r\n                  <div>\r\n                    <TextField\r\n                      label=\"Enter Previous TeamName\"\r\n                      variant=\"outlined\"\r\n                      style={{ width: \"800px\", marginRight: \"10px\" }}\r\n                      type=\"text\"\r\n                      value={this.state.newItem}\r\n                      onChange={(e) =>\r\n                        this.updateInput(\"newItem\", e.target.value)\r\n                      }\r\n                    />\r\n                    <Button\r\n                      className=\"btn\"\r\n                      color=\"primary\"\r\n                      variant=\"contained\"\r\n                      onClick={() => this.addItem()}\r\n                      disabled={!this.state.newItem.length}\r\n                    >\r\n                      <i\r\n                        className=\"material-icons\"\r\n                        style={{ marginTop: \"10px\", paddingBottom: \"5px\" }}\r\n                      >\r\n                        Add Team-Name\r\n                      </i>\r\n                    </Button>\r\n                    <br /> <br />\r\n                    <ol>\r\n                      {this.state.list.map((item) => {\r\n                        return (\r\n                          <ListItem\r\n                            style={{\r\n                              border: \"1px solid black\",\r\n                              width: \"700px\",\r\n                              borderRadius: \"5px\",\r\n                            }}\r\n                            key={item.key}\r\n                          >\r\n                            <ListItemIcon>\r\n                              <GroupIcon color=\"primary\" />\r\n                            </ListItemIcon>\r\n                            <ListItemText\r\n                              key={item.key}\r\n                              primary={\"TeamName:  \" + item.value}\r\n                            />\r\n                            <Button color=\"secondary\">\r\n                              {\r\n                                <DeleteIcon\r\n                                  fontSize=\"small\"\r\n                                  onClick={() => this.deleteItem(item.id)}\r\n                                />\r\n                              }\r\n                            </Button>\r\n                          </ListItem>\r\n                        );\r\n                      })}\r\n                    </ol>\r\n                  </div>\r\n                </div>\r\n              </>\r\n            </div>\r\n            <Button variant=\"outlined\" onClick={this.printDatas}>\r\n              click me\r\n            </Button>\r\n          </form>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default TeamDetails;\r\n"]},"metadata":{},"sourceType":"module"}