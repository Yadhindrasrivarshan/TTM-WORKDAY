{"ast":null,"code":"var _jsxFileName = \"C:\\\\React1\\\\TTM-WORKDAY\\\\client\\\\src\\\\pages\\\\TeamDetails.js\";\nimport { Button, TextField } from \"@material-ui/core\";\nimport React, { Component } from \"react\";\nimport \"./TeamDetails.css\";\nimport { app, database, fire } from '../mockfirebase';\nimport { ListItem, ListItemIcon, ListItemText } from '@material-ui/core';\nimport '../components/Todo.css';\nimport GroupIcon from '@material-ui/icons/Group';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst formValid = ({\n  formErrors,\n  ...rest\n}) => {\n  let valid = true; // validate form errors being empty\n\n  Object.values(formErrors).forEach(val => {\n    val.length > 0 && (valid = false);\n  }); // validate the form was filled out\n\n  Object.values(rest).forEach(val => {\n    val === null && (valid = false);\n  });\n  return valid;\n};\n\nclass TeamDetails extends Component {\n  constructor(props) {\n    super(props);\n\n    this.handleclear = () => {\n      document.getElementById(\"form\").reset();\n    };\n\n    this.handleSubmit = e => {\n      e.preventDefault();\n\n      if (formValid(this.state)) {\n        var list1 = [];\n        this.state.list.map(item => {\n          list1.push(item.value);\n        });\n        console.log(`\n        --SUBMITTING--\n        TeamName: ${this.state.TeamName}\n        Divisions: ${this.state.division}\n        Experience: ${this.state.experience}\n        Role: ${this.state.role}\n        DateOfJoining:${this.state.DateOfJoining},\n        List:${list1}\n      `);\n      } else {\n        console.error(\"FORM INVALID - DISPLAY ERROR MESSAGE\");\n      }\n\n      if (formValid(this.state)) {\n        var list1 = [];\n        this.state.list.map(item => {\n          list1.push(item.value);\n        });\n        database.collection('TeamDetails').doc(app.auth().currentUser.uid).set({\n          TeamName: this.state.TeamName,\n          Division: this.state.division,\n          Experience: this.state.experience,\n          Role: this.state.role,\n          DateOfJoining: this.state.DateOfJoining,\n          PrevTeams: list1\n        }).then(() => {\n          console.log(\"TeamDetails have been submitted successfully 😁😎\");\n        }).catch(error => {\n          alert(error.message);\n        });\n      }\n    };\n\n    this.printDatas = () => {\n      database.collection('teamdetails').get().then(snapshot => {\n        snapshot.docs.forEach(doc => {\n          console.log(doc.data());\n        });\n      });\n    };\n\n    this.handleChange = e => {\n      e.preventDefault();\n      const {\n        name,\n        value\n      } = e.target;\n      let formErrors = { ...this.state.formErrors\n      };\n\n      switch (name) {\n        case \"TeamName\":\n          formErrors.TeamName = value.length < 3 ? \"TEAM name must be in expanded form or it should not be less than 3 characters\" : \"\";\n          break;\n\n        case \"division\":\n          formErrors.division = value.length < 3 ? \"DOMAIN/DIVISION name should be atleast three characters\" : \"\";\n          break;\n\n        case \"experience\":\n          formErrors.experience = Number(value) < 0 ? \"Enter your experience correctly ,as experience wont be in negative value\" : \"\";\n          break;\n\n        case \"role\":\n          formErrors.role = value.length < 6 ? \"Kindly enter your role correctly\" : \"\";\n          break;\n\n        default:\n          break;\n      }\n\n      this.setState({\n        formErrors,\n        [name]: value\n      }, () => console.log(this.state));\n    };\n\n    this.state = {\n      TeamName: null,\n      division: null,\n      experience: null,\n      role: null,\n      DateOfJoining: null,\n      newItem: \"\",\n      list: [],\n      formErrors: {\n        TeamName: \"\",\n        division: \"\",\n        experience: \"\",\n        role: \"\"\n      }\n    };\n  }\n\n  updateInput(key, value) {\n    // update react state\n    this.setState({\n      [key]: value\n    });\n  }\n\n  addItem() {\n    // create a new item with unique id\n    const newItem = {\n      id: 1 + Math.random(),\n      value: this.state.newItem.slice()\n    }; // copy current list of items\n\n    const list = [...this.state.list]; // add the new item to the list\n\n    list.push(newItem); // update state with new list, reset the new item input\n\n    var list2 = [];\n    list.map(item => {\n      console.log(item.value);\n      list2.push(item.value);\n    });\n    this.setState({\n      list,\n      newItem: \"\"\n    });\n  }\n\n  deleteItem(id) {\n    // copy current list of items\n    const list = [...this.state.list]; // filter out the item being deleted\n\n    const updatedList = list.filter(item => item.id !== id);\n    this.setState({\n      list: updatedList\n    });\n  }\n\n  render() {\n    const {\n      formErrors\n    } = this.state;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"wrTeamDetailser\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"h1\", {\n          style: {\n            textAlign: \"left\"\n          },\n          children: [\"Team details \", /*#__PURE__*/_jsxDEV(React.Fragment, {\n            children: [/*#__PURE__*/_jsxDEV(Button, {\n              variant: \"contained\",\n              style: {\n                marginRight: \"20px\",\n                marginLeft: \"770px\",\n                marginBottom: \"10px\"\n              },\n              color: \"primary\",\n              onClick: this.handleSubmit,\n              children: \"Submit\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 188,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Button, {\n              variant: \"contained\",\n              style: {\n                marginRight: \"0px\",\n                marginBottom: \"10px\"\n              },\n              color: \"secondary\",\n              onClick: this.handleclear,\n              children: \"Clear\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 192,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 187,\n            columnNumber: 54\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 187,\n          columnNumber: 9\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 186,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-wrTeamDetailser\",\n        children: /*#__PURE__*/_jsxDEV(\"form\", {\n          onSubmit: this.handleSubmit,\n          noValidate: true,\n          id: \"form\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"firstName\",\n            children: [/*#__PURE__*/_jsxDEV(TextField, {\n              variant: \"outlined\",\n              label: \"Team-Name\",\n              autoComplete: \"off\",\n              type: \"text\",\n              name: \"TeamName\",\n              noValidate: true,\n              onChange: this.handleChange\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 200,\n              columnNumber: 15\n            }, this), formErrors.TeamName.length > 0 && /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"errorMessage\",\n              children: formErrors.TeamName\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 210,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 199,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"lastName\",\n            children: /*#__PURE__*/_jsxDEV(TextField, {\n              variant: \"outlined\",\n              required: true,\n              name: \"DateOfJoining\",\n              label: \"Date of Joining\",\n              required: true,\n              type: \"date\",\n              format: \"MM/dd/yyyy\",\n              onChange: this.handleChange,\n              InputLabelProps: {\n                shrink: true\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 214,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 213,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"firstName\",\n            children: [/*#__PURE__*/_jsxDEV(TextField, {\n              variant: \"outlined\",\n              label: \"Division/Domain\",\n              autoComplete: \"off\",\n              type: \"text\",\n              name: \"division\",\n              noValidate: true,\n              onChange: this.handleChange\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 230,\n              columnNumber: 15\n            }, this), formErrors.division.length > 0 && /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"errorMessage\",\n              children: formErrors.division\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 242,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 229,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"lastName\",\n            children: [/*#__PURE__*/_jsxDEV(TextField, {\n              variant: \"outlined\",\n              label: \"Enter the no of years in the current team\",\n              type: \"number\",\n              autoComplete: \"off\",\n              name: \"experience\",\n              noValidate: true,\n              onChange: this.handleChange\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 246,\n              columnNumber: 15\n            }, this), formErrors.experience.length > 0 && /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"errorMessage\",\n              children: formErrors.experience\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 257,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 245,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"email\",\n            children: [/*#__PURE__*/_jsxDEV(TextField, {\n              variant: \"outlined\",\n              label: \"Eg: Software Engineer\",\n              autoComplete: \"off\",\n              type: \"text\",\n              name: \"role\",\n              noValidate: true,\n              onChange: this.handleChange\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 262,\n              columnNumber: 15\n            }, this), formErrors.role.length > 0 && /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"errorMessage\",\n              children: formErrors.role\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 272,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 261,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              width: \"100%\"\n            },\n            children: /*#__PURE__*/_jsxDEV(_Fragment, {\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                children: /*#__PURE__*/_jsxDEV(\"div\", {\n                  children: [/*#__PURE__*/_jsxDEV(TextField, {\n                    label: \"Enter Previous TeamName\",\n                    variant: \"outlined\",\n                    style: {\n                      width: \"800px\",\n                      marginRight: \"10px\"\n                    },\n                    type: \"text\",\n                    value: this.state.newItem,\n                    onChange: e => this.updateInput(\"newItem\", e.target.value)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 279,\n                    columnNumber: 17\n                  }, this), /*#__PURE__*/_jsxDEV(Button, {\n                    className: \"btn\",\n                    color: \"primary\",\n                    variant: \"contained\",\n                    onClick: () => this.addItem(),\n                    disabled: !this.state.newItem.length,\n                    children: /*#__PURE__*/_jsxDEV(\"i\", {\n                      className: \"material-icons\",\n                      style: {\n                        marginTop: \"10px\",\n                        paddingBottom: \"5px\"\n                      },\n                      children: \"Add Team-Name\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 295,\n                      columnNumber: 19\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 288,\n                    columnNumber: 17\n                  }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 297,\n                    columnNumber: 17\n                  }, this), \" \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 297,\n                    columnNumber: 24\n                  }, this), /*#__PURE__*/_jsxDEV(\"ol\", {\n                    children: this.state.list.map(item => {\n                      return /*#__PURE__*/_jsxDEV(ListItem, {\n                        style: {\n                          border: \"1px solid black\",\n                          width: \"700px\",\n                          borderRadius: \"5px\"\n                        },\n                        children: [/*#__PURE__*/_jsxDEV(ListItemIcon, {\n                          children: /*#__PURE__*/_jsxDEV(GroupIcon, {\n                            color: \"primary\"\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 303,\n                            columnNumber: 31\n                          }, this)\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 302,\n                          columnNumber: 27\n                        }, this), /*#__PURE__*/_jsxDEV(ListItemText, {\n                          primary: \"TeamName:  \" + item.value\n                        }, item.key, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 305,\n                          columnNumber: 27\n                        }, this), /*#__PURE__*/_jsxDEV(Button, {\n                          color: \"secondary\",\n                          children: /*#__PURE__*/_jsxDEV(DeleteIcon, {\n                            fontSize: \"small\",\n                            onClick: () => this.deleteItem(item.id)\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 306,\n                            columnNumber: 54\n                          }, this)\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 306,\n                          columnNumber: 27\n                        }, this)]\n                      }, item.key, true, {\n                        fileName: _jsxFileName,\n                        lineNumber: 301,\n                        columnNumber: 23\n                      }, this);\n                    })\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 298,\n                    columnNumber: 17\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 278,\n                  columnNumber: 15\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 277,\n                columnNumber: 15\n              }, this)\n            }, void 0, false)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 275,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            variant: \"outlined\",\n            onClick: this.printDatas,\n            children: \"click me\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 315,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 198,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 197,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 185,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default TeamDetails;","map":{"version":3,"sources":["C:/React1/TTM-WORKDAY/client/src/pages/TeamDetails.js"],"names":["Button","TextField","React","Component","app","database","fire","ListItem","ListItemIcon","ListItemText","GroupIcon","DeleteIcon","formValid","formErrors","rest","valid","Object","values","forEach","val","length","TeamDetails","constructor","props","handleclear","document","getElementById","reset","handleSubmit","e","preventDefault","state","list1","list","map","item","push","value","console","log","TeamName","division","experience","role","DateOfJoining","error","collection","doc","auth","currentUser","uid","set","Division","Experience","Role","PrevTeams","then","catch","alert","message","printDatas","get","snapshot","docs","data","handleChange","name","target","Number","setState","newItem","updateInput","key","addItem","id","Math","random","slice","list2","deleteItem","updatedList","filter","render","textAlign","marginRight","marginLeft","marginBottom","shrink","width","marginTop","paddingBottom","border","borderRadius"],"mappings":";AAAA,SAASA,MAAT,EAAiBC,SAAjB,QAAkC,mBAAlC;AACA,OAAOC,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAO,mBAAP;AAEA,SAAQC,GAAR,EAAaC,QAAb,EAAsBC,IAAtB,QAAiC,iBAAjC;AACA,SAAQC,QAAR,EAAiBC,YAAjB,EAA8BC,YAA9B,QAAiD,mBAAjD;AACA,OAAO,wBAAP;AACA,OAAOC,SAAP,MAAsB,0BAAtB;AAEA,OAAOC,UAAP,MAAuB,2BAAvB;;;;AAEA,MAAMC,SAAS,GAAG,CAAC;AAAEC,EAAAA,UAAF;AAAc,KAAGC;AAAjB,CAAD,KAA6B;AAC3C,MAAIC,KAAK,GAAG,IAAZ,CAD2C,CAE3C;;AACAC,EAAAA,MAAM,CAACC,MAAP,CAAcJ,UAAd,EAA0BK,OAA1B,CAAkCC,GAAG,IAAI;AACvCA,IAAAA,GAAG,CAACC,MAAJ,GAAa,CAAb,KAAmBL,KAAK,GAAG,KAA3B;AACD,GAFD,EAH2C,CAO3C;;AACAC,EAAAA,MAAM,CAACC,MAAP,CAAcH,IAAd,EAAoBI,OAApB,CAA4BC,GAAG,IAAI;AACjCA,IAAAA,GAAG,KAAK,IAAR,KAAiBJ,KAAK,GAAG,KAAzB;AACD,GAFD;AAIA,SAAOA,KAAP;AACD,CAbH;;AAgBA,MAAMM,WAAN,SAA0BlB,SAA1B,CAAoC;AAClCmB,EAAAA,WAAW,CAACC,KAAD,EAAO;AACd,UAAMA,KAAN;;AADc,SAqBlBC,WArBkB,GAqBN,MAAI;AACdC,MAAAA,QAAQ,CAACC,cAAT,CAAwB,MAAxB,EAAgCC,KAAhC;AACD,KAvBiB;;AAAA,SAmElBC,YAnEkB,GAmEHC,CAAC,IAAI;AAClBA,MAAAA,CAAC,CAACC,cAAF;;AAEA,UAAIlB,SAAS,CAAC,KAAKmB,KAAN,CAAb,EAA2B;AAEzB,YAAIC,KAAK,GAAC,EAAV;AACA,aAAKD,KAAL,CAAWE,IAAX,CAAgBC,GAAhB,CAAqBC,IAAD,IAAQ;AAC1BH,UAAAA,KAAK,CAACI,IAAN,CAAWD,IAAI,CAACE,KAAhB;AACD,SAFD;AAGAC,QAAAA,OAAO,CAACC,GAAR,CAAa;AACnB;AACA,oBAAoB,KAAKR,KAAL,CAAWS,QAAS;AACxC,qBAAqB,KAAKT,KAAL,CAAWU,QAAS;AACzC,sBAAsB,KAAKV,KAAL,CAAWW,UAAW;AAC5C,gBAAgB,KAAKX,KAAL,CAAWY,IAAK;AAChC,wBAAwB,KAAKZ,KAAL,CAAWa,aAAc;AACjD,eAAeZ,KAAM;AACrB,OARM;AASD,OAfD,MAeO;AACLM,QAAAA,OAAO,CAACO,KAAR,CAAc,sCAAd;AACD;;AAEF,UAAGjC,SAAS,CAAC,KAAKmB,KAAN,CAAZ,EAAyB;AACtB,YAAIC,KAAK,GAAC,EAAV;AACA,aAAKD,KAAL,CAAWE,IAAX,CAAgBC,GAAhB,CAAqBC,IAAD,IAAQ;AAC1BH,UAAAA,KAAK,CAACI,IAAN,CAAWD,IAAI,CAACE,KAAhB;AACD,SAFD;AAGAhC,QAAAA,QAAQ,CAACyC,UAAT,CAAoB,aAApB,EAAmCC,GAAnC,CAAuC3C,GAAG,CAAC4C,IAAJ,GAAWC,WAAX,CAAuBC,GAA9D,EAAmEC,GAAnE,CAAuE;AACrEX,UAAAA,QAAQ,EAAC,KAAKT,KAAL,CAAWS,QADiD;AAErEY,UAAAA,QAAQ,EAAC,KAAKrB,KAAL,CAAWU,QAFiD;AAGrEY,UAAAA,UAAU,EAAC,KAAKtB,KAAL,CAAWW,UAH+C;AAIrEY,UAAAA,IAAI,EAAC,KAAKvB,KAAL,CAAWY,IAJqD;AAKrEC,UAAAA,aAAa,EAAC,KAAKb,KAAL,CAAWa,aAL4C;AAMrEW,UAAAA,SAAS,EAACvB;AAN2D,SAAvE,EAQCwB,IARD,CAQM,MAAI;AACRlB,UAAAA,OAAO,CAACC,GAAR,CAAY,mDAAZ;AACD,SAVD,EAWCkB,KAXD,CAWQZ,KAAD,IAAS;AACda,UAAAA,KAAK,CAACb,KAAK,CAACc,OAAP,CAAL;AACD,SAbD;AAcD;AAGF,KA/GiB;;AAAA,SAiHlBC,UAjHkB,GAiHP,MAAI;AAACvD,MAAAA,QAAQ,CAACyC,UAAT,CAAoB,aAApB,EAAmCe,GAAnC,GAAyCL,IAAzC,CAA+CM,QAAD,IAAY;AACxEA,QAAAA,QAAQ,CAACC,IAAT,CAAc7C,OAAd,CAAsB6B,GAAG,IAAI;AACvBT,UAAAA,OAAO,CAACC,GAAR,CAAYQ,GAAG,CAACiB,IAAJ,EAAZ;AACL,SAFD;AAIF,OALgB;AAOf,KAxHiB;;AAAA,SA0HlBC,YA1HkB,GA0HHpC,CAAC,IAAI;AAClBA,MAAAA,CAAC,CAACC,cAAF;AACA,YAAM;AAAEoC,QAAAA,IAAF;AAAQ7B,QAAAA;AAAR,UAAkBR,CAAC,CAACsC,MAA1B;AACA,UAAItD,UAAU,GAAG,EAAE,GAAG,KAAKkB,KAAL,CAAWlB;AAAhB,OAAjB;;AAEA,cAAQqD,IAAR;AACE,aAAK,UAAL;AACErD,UAAAA,UAAU,CAAC2B,QAAX,GACEH,KAAK,CAACjB,MAAN,GAAe,CAAf,GAAmB,+EAAnB,GAAqG,EADvG;AAEA;;AACF,aAAK,UAAL;AACEP,UAAAA,UAAU,CAAC4B,QAAX,GACEJ,KAAK,CAACjB,MAAN,GAAe,CAAf,GAAmB,yDAAnB,GAA+E,EADjF;AAEA;;AACF,aAAK,YAAL;AACEP,UAAAA,UAAU,CAAC6B,UAAX,GAAuB0B,MAAM,CAAC/B,KAAD,CAAN,GAAc,CAAd,GACnB,0EADmB,GAEnB,EAFJ;AAGA;;AACF,aAAK,MAAL;AACExB,UAAAA,UAAU,CAAC8B,IAAX,GACEN,KAAK,CAACjB,MAAN,GAAe,CAAf,GAAmB,kCAAnB,GAAwD,EAD1D;AAEA;;AACF;AACE;AAnBJ;;AAsBA,WAAKiD,QAAL,CAAc;AAAExD,QAAAA,UAAF;AAAc,SAACqD,IAAD,GAAQ7B;AAAtB,OAAd,EAA6C,MAAMC,OAAO,CAACC,GAAR,CAAY,KAAKR,KAAjB,CAAnD;AACD,KAtJiB;;AAGd,SAAKA,KAAL,GAAW;AACTS,MAAAA,QAAQ,EAAC,IADA;AAETC,MAAAA,QAAQ,EAAC,IAFA;AAGTC,MAAAA,UAAU,EAAC,IAHF;AAITC,MAAAA,IAAI,EAAC,IAJI;AAKTC,MAAAA,aAAa,EAAC,IALL;AAMT0B,MAAAA,OAAO,EAAE,EANA;AAOTrC,MAAAA,IAAI,EAAE,EAPG;AASTpB,MAAAA,UAAU,EAAC;AACP2B,QAAAA,QAAQ,EAAC,EADF;AAEPC,QAAAA,QAAQ,EAAC,EAFF;AAGPC,QAAAA,UAAU,EAAC,EAHJ;AAIPC,QAAAA,IAAI,EAAC;AAJE;AATF,KAAX;AAgBH;;AAMD4B,EAAAA,WAAW,CAACC,GAAD,EAAMnC,KAAN,EAAa;AACtB;AACA,SAAKgC,QAAL,CAAc;AAAE,OAACG,GAAD,GAAOnC;AAAT,KAAd;AACD;;AAEDoC,EAAAA,OAAO,GAAG;AACR;AACA,UAAMH,OAAO,GAAG;AACdI,MAAAA,EAAE,EAAE,IAAIC,IAAI,CAACC,MAAL,EADM;AAEdvC,MAAAA,KAAK,EAAE,KAAKN,KAAL,CAAWuC,OAAX,CAAmBO,KAAnB;AAFO,KAAhB,CAFQ,CAQR;;AACA,UAAM5C,IAAI,GAAG,CAAC,GAAG,KAAKF,KAAL,CAAWE,IAAf,CAAb,CATQ,CAWR;;AACAA,IAAAA,IAAI,CAACG,IAAL,CAAUkC,OAAV,EAZQ,CAcR;;AACA,QAAIQ,KAAK,GAAC,EAAV;AACA7C,IAAAA,IAAI,CAACC,GAAL,CAAUC,IAAD,IAAQ;AACfG,MAAAA,OAAO,CAACC,GAAR,CAAYJ,IAAI,CAACE,KAAjB;AACAyC,MAAAA,KAAK,CAAC1C,IAAN,CAAWD,IAAI,CAACE,KAAhB;AACD,KAHD;AAMA,SAAKgC,QAAL,CAAc;AACZpC,MAAAA,IADY;AAEZqC,MAAAA,OAAO,EAAE;AAFG,KAAd;AAID;;AAEDS,EAAAA,UAAU,CAACL,EAAD,EAAK;AACb;AACA,UAAMzC,IAAI,GAAG,CAAC,GAAG,KAAKF,KAAL,CAAWE,IAAf,CAAb,CAFa,CAGb;;AACA,UAAM+C,WAAW,GAAG/C,IAAI,CAACgD,MAAL,CAAY9C,IAAI,IAAIA,IAAI,CAACuC,EAAL,KAAYA,EAAhC,CAApB;AAEA,SAAKL,QAAL,CAAc;AAAEpC,MAAAA,IAAI,EAAE+C;AAAR,KAAd;AACD;;AAuFDE,EAAAA,MAAM,GAAG;AACP,UAAM;AAAErE,MAAAA;AAAF,QAAiB,KAAKkB,KAA5B;AAEA,wBACE;AAAK,MAAA,SAAS,EAAC,iBAAf;AAAA,8BACE;AAAA,+BACA;AAAI,UAAA,KAAK,EAAE;AAACoD,YAAAA,SAAS,EAAC;AAAX,WAAX;AAAA,mDAA6C,QAAC,KAAD,CAAO,QAAP;AAAA,oCACrC,QAAC,MAAD;AAAQ,cAAA,OAAO,EAAC,WAAhB;AAA4B,cAAA,KAAK,EAAE;AAACC,gBAAAA,WAAW,EAAC,MAAb;AAAoBC,gBAAAA,UAAU,EAAC,OAA/B;AAAuCC,gBAAAA,YAAY,EAAC;AAApD,eAAnC;AAAgG,cAAA,KAAK,EAAC,SAAtG;AAAgH,cAAA,OAAO,EAAE,KAAK1D,YAA9H;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADqC,eAKrC,QAAC,MAAD;AAAQ,cAAA,OAAO,EAAC,WAAhB;AAA4B,cAAA,KAAK,EAAE;AAACwD,gBAAAA,WAAW,EAAC,KAAb;AAAmBE,gBAAAA,YAAY,EAAC;AAAhC,eAAnC;AAA2E,cAAA,KAAK,EAAC,WAAjF;AAA6F,cAAA,OAAO,EAAE,KAAK9D,WAA3G;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBALqC;AAAA;AAAA;AAAA;AAAA;AAAA,kBAA7C;AAAA;AAAA;AAAA;AAAA;AAAA;AADA;AAAA;AAAA;AAAA;AAAA,cADF,eAYE;AAAK,QAAA,SAAS,EAAC,sBAAf;AAAA,+BACE;AAAM,UAAA,QAAQ,EAAE,KAAKI,YAArB;AAAmC,UAAA,UAAU,MAA7C;AAA8C,UAAA,EAAE,EAAC,MAAjD;AAAA,kCACE;AAAK,YAAA,SAAS,EAAC,WAAf;AAAA,oCACE,QAAC,SAAD;AACE,cAAA,OAAO,EAAC,UADV;AAEE,cAAA,KAAK,EAAC,WAFR;AAGC,cAAA,YAAY,EAAC,KAHd;AAIE,cAAA,IAAI,EAAC,MAJP;AAKE,cAAA,IAAI,EAAC,UALP;AAME,cAAA,UAAU,MANZ;AAOE,cAAA,QAAQ,EAAE,KAAKqC;AAPjB;AAAA;AAAA;AAAA;AAAA,oBADF,EAUGpD,UAAU,CAAC2B,QAAX,CAAoBpB,MAApB,GAA2B,CAA3B,iBACG;AAAM,cAAA,SAAS,EAAC,cAAhB;AAAA,wBAAgCP,UAAU,CAAC2B;AAA3C;AAAA;AAAA;AAAA;AAAA,oBAXN;AAAA;AAAA;AAAA;AAAA;AAAA,kBADF,eAeE;AAAK,YAAA,SAAS,EAAC,UAAf;AAAA,mCACE,QAAC,SAAD;AACM,cAAA,OAAO,EAAC,UADd;AAEM,cAAA,QAAQ,MAFd;AAGM,cAAA,IAAI,EAAC,eAHX;AAIM,cAAA,KAAK,EAAC,iBAJZ;AAKM,cAAA,QAAQ,MALd;AAMM,cAAA,IAAI,EAAC,MANX;AAOM,cAAA,MAAM,EAAC,YAPb;AAQM,cAAA,QAAQ,EAAE,KAAKyB,YARrB;AASM,cAAA,eAAe,EAAE;AACfsB,gBAAAA,MAAM,EAAE;AADO;AATvB;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,kBAfF,eA+BE;AAAK,YAAA,SAAS,EAAC,WAAf;AAAA,oCACE,QAAC,SAAD;AACA,cAAA,OAAO,EAAC,UADR;AAEE,cAAA,KAAK,EAAC,iBAFR;AAGC,cAAA,YAAY,EAAC,KAHd;AAIE,cAAA,IAAI,EAAC,MAJP;AAKE,cAAA,IAAI,EAAC,UALP;AAME,cAAA,UAAU,MANZ;AAOE,cAAA,QAAQ,EAAE,KAAKtB;AAPjB;AAAA;AAAA;AAAA;AAAA,oBADF,EAYGpD,UAAU,CAAC4B,QAAX,CAAoBrB,MAApB,GAA2B,CAA3B,iBACG;AAAM,cAAA,SAAS,EAAC,cAAhB;AAAA,wBAAgCP,UAAU,CAAC4B;AAA3C;AAAA;AAAA;AAAA;AAAA,oBAbN;AAAA;AAAA;AAAA;AAAA;AAAA,kBA/BF,eA+CE;AAAK,YAAA,SAAS,EAAC,UAAf;AAAA,oCACE,QAAC,SAAD;AACA,cAAA,OAAO,EAAC,UADR;AAEE,cAAA,KAAK,EAAC,2CAFR;AAGE,cAAA,IAAI,EAAC,QAHP;AAIE,cAAA,YAAY,EAAC,KAJf;AAKE,cAAA,IAAI,EAAC,YALP;AAME,cAAA,UAAU,MANZ;AAOE,cAAA,QAAQ,EAAE,KAAKwB;AAPjB;AAAA;AAAA;AAAA;AAAA,oBADF,EAWIpD,UAAU,CAAC6B,UAAX,CAAsBtB,MAAtB,GAA6B,CAA7B,iBACE;AAAM,cAAA,SAAS,EAAC,cAAhB;AAAA,wBAAgCP,UAAU,CAAC6B;AAA3C;AAAA;AAAA;AAAA;AAAA,oBAZN;AAAA;AAAA;AAAA;AAAA;AAAA,kBA/CF,eA+DE;AAAK,YAAA,SAAS,EAAC,OAAf;AAAA,oCACE,QAAC,SAAD;AACA,cAAA,OAAO,EAAC,UADR;AAEE,cAAA,KAAK,EAAC,uBAFR;AAGC,cAAA,YAAY,EAAC,KAHd;AAIE,cAAA,IAAI,EAAC,MAJP;AAKE,cAAA,IAAI,EAAC,MALP;AAME,cAAA,UAAU,MANZ;AAOE,cAAA,QAAQ,EAAE,KAAKuB;AAPjB;AAAA;AAAA;AAAA;AAAA,oBADF,EAUMpD,UAAU,CAAC8B,IAAX,CAAgBvB,MAAhB,GAAuB,CAAvB,iBACA;AAAM,cAAA,SAAS,EAAC,cAAhB;AAAA,wBAAgCP,UAAU,CAAC8B;AAA3C;AAAA;AAAA;AAAA;AAAA,oBAXN;AAAA;AAAA;AAAA;AAAA;AAAA,kBA/DF,eA6EE;AAAM,YAAA,KAAK,EAAE;AAAC6C,cAAAA,KAAK,EAAC;AAAP,aAAb;AAAA,mCACA;AAAA,qCACE;AAAA,uCACA;AAAA,0CACE,QAAC,SAAD;AACA,oBAAA,KAAK,EAAC,yBADN;AAEA,oBAAA,OAAO,EAAC,UAFR;AAGA,oBAAA,KAAK,EAAE;AAACA,sBAAAA,KAAK,EAAC,OAAP;AAAeJ,sBAAAA,WAAW,EAAC;AAA3B,qBAHP;AAIE,oBAAA,IAAI,EAAC,MAJP;AAME,oBAAA,KAAK,EAAE,KAAKrD,KAAL,CAAWuC,OANpB;AAOE,oBAAA,QAAQ,EAAEzC,CAAC,IAAI,KAAK0C,WAAL,CAAiB,SAAjB,EAA4B1C,CAAC,CAACsC,MAAF,CAAS9B,KAArC;AAPjB;AAAA;AAAA;AAAA;AAAA,0BADF,eAUE,QAAC,MAAD;AACE,oBAAA,SAAS,EAAC,KADZ;AAEE,oBAAA,KAAK,EAAC,SAFR;AAGE,oBAAA,OAAO,EAAC,WAHV;AAIE,oBAAA,OAAO,EAAE,MAAM,KAAKoC,OAAL,EAJjB;AAKE,oBAAA,QAAQ,EAAE,CAAC,KAAK1C,KAAL,CAAWuC,OAAX,CAAmBlD,MALhC;AAAA,2CAOE;AAAG,sBAAA,SAAS,EAAC,gBAAb;AAA8B,sBAAA,KAAK,EAAE;AAACqE,wBAAAA,SAAS,EAAC,MAAX;AAAkBC,wBAAAA,aAAa,EAAC;AAAhC,uBAArC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAPF;AAAA;AAAA;AAAA;AAAA,0BAVF,eAmBE;AAAA;AAAA;AAAA;AAAA,0BAnBF,oBAmBS;AAAA;AAAA;AAAA;AAAA,0BAnBT,eAoBE;AAAA,8BACG,KAAK3D,KAAL,CAAWE,IAAX,CAAgBC,GAAhB,CAAoBC,IAAI,IAAI;AAC3B,0CACE,QAAC,QAAD;AAAU,wBAAA,KAAK,EAAE;AAACwD,0BAAAA,MAAM,EAAC,iBAAR;AAA0BH,0BAAAA,KAAK,EAAC,OAAhC;AAAwCI,0BAAAA,YAAY,EAAC;AAArD,yBAAjB;AAAA,gDACI,QAAC,YAAD;AAAA,iDACI,QAAC,SAAD;AAAW,4BAAA,KAAK,EAAC;AAAjB;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,gCADJ,eAII,QAAC,YAAD;AAA6B,0BAAA,OAAO,EAAE,gBAAczD,IAAI,CAACE;AAAzD,2BAAmBF,IAAI,CAACqC,GAAxB;AAAA;AAAA;AAAA;AAAA,gCAJJ,eAKI,QAAC,MAAD;AAAQ,0BAAA,KAAK,EAAC,WAAd;AAAA,iDAA2B,QAAC,UAAD;AAAY,4BAAA,QAAQ,EAAC,OAArB;AAA6B,4BAAA,OAAO,EAAE,MAAI,KAAKO,UAAL,CAAgB5C,IAAI,CAACuC,EAArB;AAA1C;AAAA;AAAA;AAAA;AAAA;AAA3B;AAAA;AAAA;AAAA;AAAA,gCALJ;AAAA,yBAAmFvC,IAAI,CAACqC,GAAxF;AAAA;AAAA;AAAA;AAAA,8BADF;AASD,qBAVA;AADH;AAAA;AAAA;AAAA;AAAA,0BApBF;AAAA;AAAA;AAAA;AAAA;AAAA;AADA;AAAA;AAAA;AAAA;AAAA;AADF;AADA;AAAA;AAAA;AAAA;AAAA,kBA7EF,eAqHE,QAAC,MAAD;AAAQ,YAAA,OAAO,EAAC,UAAhB;AAA2B,YAAA,OAAO,EAAE,KAAKZ,UAAzC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBArHF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cAZF;AAAA;AAAA;AAAA;AAAA;AAAA,YADF;AA0ID;;AAtSiC;;AAySpC,eAAevC,WAAf","sourcesContent":["import { Button, TextField } from \"@material-ui/core\";\r\nimport React, { Component } from \"react\";\r\nimport \"./TeamDetails.css\";\r\n\r\nimport {app, database,fire} from '../mockfirebase'\r\nimport {ListItem,ListItemIcon,ListItemText} from '@material-ui/core'\r\nimport '../components/Todo.css'\r\nimport GroupIcon from '@material-ui/icons/Group';\r\n\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\n\r\nconst formValid = ({ formErrors, ...rest }) => {\r\n    let valid = true;\r\n    // validate form errors being empty\r\n    Object.values(formErrors).forEach(val => {\r\n      val.length > 0 && (valid = false);\r\n    });\r\n  \r\n    // validate the form was filled out\r\n    Object.values(rest).forEach(val => {\r\n      val === null && (valid = false);\r\n    });\r\n  \r\n    return valid;\r\n  };\r\n  \r\n\r\nclass TeamDetails extends Component {\r\n  constructor(props){\r\n      super(props)\r\n\r\n      this.state={\r\n        TeamName:null,\r\n        division:null,\r\n        experience:null,\r\n        role:null,\r\n        DateOfJoining:null,\r\n        newItem: \"\",\r\n        list: [],\r\n\r\n        formErrors:{\r\n            TeamName:\"\",\r\n            division:\"\",\r\n            experience:\"\",\r\n            role:\"\",\r\n        }\r\n      }\r\n  }\r\n\r\n  handleclear=()=>{\r\n    document.getElementById(\"form\").reset()\r\n  }\r\n  \r\n  updateInput(key, value) {\r\n    // update react state\r\n    this.setState({ [key]: value });\r\n  }\r\n\r\n  addItem() {\r\n    // create a new item with unique id\r\n    const newItem = {\r\n      id: 1 + Math.random(),\r\n      value: this.state.newItem.slice()\r\n \r\n    };\r\n\r\n    // copy current list of items\r\n    const list = [...this.state.list];\r\n\r\n    // add the new item to the list\r\n    list.push(newItem);\r\n\r\n    // update state with new list, reset the new item input\r\n    var list2=[]\r\n    list.map((item)=>{\r\n      console.log(item.value);\r\n      list2.push(item.value)\r\n    })\r\n\r\n  \r\n    this.setState({\r\n      list,\r\n      newItem: \"\"\r\n    });\r\n  }\r\n\r\n  deleteItem(id) {\r\n    // copy current list of items\r\n    const list = [...this.state.list];\r\n    // filter out the item being deleted\r\n    const updatedList = list.filter(item => item.id !== id);\r\n\r\n    this.setState({ list: updatedList });\r\n  }\r\n\r\n  handleSubmit = e => {\r\n    e.preventDefault();\r\n\r\n    if (formValid(this.state)) {\r\n\r\n      var list1=[]\r\n      this.state.list.map((item)=>{\r\n        list1.push(item.value)\r\n      })\r\n      console.log(`\r\n        --SUBMITTING--\r\n        TeamName: ${this.state.TeamName}\r\n        Divisions: ${this.state.division}\r\n        Experience: ${this.state.experience}\r\n        Role: ${this.state.role}\r\n        DateOfJoining:${this.state.DateOfJoining},\r\n        List:${list1}\r\n      `);\r\n    } else {\r\n      console.error(\"FORM INVALID - DISPLAY ERROR MESSAGE\");\r\n    }\r\n\r\n   if(formValid(this.state)){\r\n      var list1=[]\r\n      this.state.list.map((item)=>{\r\n        list1.push(item.value)\r\n      })\r\n      database.collection('TeamDetails').doc(app.auth().currentUser.uid).set({\r\n        TeamName:this.state.TeamName,\r\n        Division:this.state.division,\r\n        Experience:this.state.experience,\r\n        Role:this.state.role,\r\n        DateOfJoining:this.state.DateOfJoining,\r\n        PrevTeams:list1,\r\n      })\r\n      .then(()=>{\r\n        console.log(\"TeamDetails have been submitted successfully 😁😎\")\r\n      })\r\n      .catch((error)=>{\r\n        alert(error.message)\r\n      })\r\n    }\r\n\r\n    \r\n  };\r\n\r\n  printDatas=()=>{database.collection('teamdetails').get().then((snapshot)=>{\r\n    snapshot.docs.forEach(doc => {\r\n          console.log(doc.data());\r\n    }\r\n    )\r\n }\r\n)\r\n  }\r\n\r\n  handleChange = e => {\r\n    e.preventDefault();\r\n    const { name, value } = e.target;\r\n    let formErrors = { ...this.state.formErrors };\r\n\r\n    switch (name) {\r\n      case \"TeamName\":\r\n        formErrors.TeamName =\r\n          value.length < 3 ? \"TEAM name must be in expanded form or it should not be less than 3 characters\" : \"\";\r\n        break;\r\n      case \"division\":\r\n        formErrors.division =\r\n          value.length < 3 ? \"DOMAIN/DIVISION name should be atleast three characters\" : \"\";\r\n        break;\r\n      case \"experience\":\r\n        formErrors.experience =Number(value)<0\r\n          ? \"Enter your experience correctly ,as experience wont be in negative value\"\r\n          : \"\";\r\n        break;\r\n      case \"role\":\r\n        formErrors.role =\r\n          value.length < 6 ? \"Kindly enter your role correctly\" : \"\";\r\n        break;\r\n      default:\r\n        break;\r\n    }\r\n\r\n    this.setState({ formErrors, [name]: value }, () => console.log(this.state));\r\n  };\r\n \r\n  render() {\r\n    const { formErrors } = this.state;\r\n\r\n    return (\r\n      <div className=\"wrTeamDetailser\">\r\n        <div>\r\n        <h1 style={{textAlign:\"left\"}}>Team details {<React.Fragment>\r\n                <Button variant=\"contained\" style={{marginRight:\"20px\",marginLeft:\"770px\",marginBottom:\"10px\"}} color=\"primary\" onClick={this.handleSubmit} >\r\n                Submit\r\n                </Button>\r\n            \r\n                <Button variant=\"contained\" style={{marginRight:\"0px\",marginBottom:\"10px\"}}color=\"secondary\" onClick={this.handleclear}>\r\n                Clear\r\n                </Button>\r\n          </React.Fragment>}</h1>\r\n        </div>\r\n        <div className=\"form-wrTeamDetailser\">\r\n          <form onSubmit={this.handleSubmit} noValidate id=\"form\">\r\n            <div className=\"firstName\">\r\n              <TextField\r\n                variant=\"outlined\"\r\n                label=\"Team-Name\"\r\n               autoComplete=\"off\"\r\n                type=\"text\"\r\n                name=\"TeamName\"\r\n                noValidate\r\n                onChange={this.handleChange}\r\n              />\r\n              {formErrors.TeamName.length>0 && (\r\n                  <span className=\"errorMessage\">{formErrors.TeamName}</span>\r\n              )}\r\n            </div>\r\n            <div className=\"lastName\">\r\n              <TextField\r\n                    variant=\"outlined\"\r\n                    required\r\n                    name=\"DateOfJoining\"\r\n                    label=\"Date of Joining\"\r\n                    required\r\n                    type=\"date\"\r\n                    format=\"MM/dd/yyyy\"\r\n                    onChange={this.handleChange}\r\n                    InputLabelProps={{\r\n                      shrink: true,\r\n                    }}\r\n                  />\r\n              \r\n            </div>\r\n            <div className=\"firstName\">\r\n              <TextField\r\n              variant=\"outlined\"\r\n                label=\"Division/Domain\"\r\n               autoComplete=\"off\"\r\n                type=\"text\"\r\n                name=\"division\"\r\n                noValidate\r\n                onChange={this.handleChange}\r\n\r\n                \r\n              />\r\n              {formErrors.division.length>0 && (\r\n                  <span className=\"errorMessage\">{formErrors.division}</span>\r\n              )}\r\n            </div>\r\n            <div className=\"lastName\">\r\n              <TextField\r\n              variant=\"outlined\"\r\n                label=\"Enter the no of years in the current team\"\r\n                type=\"number\"\r\n                autoComplete=\"off\"\r\n                name=\"experience\"\r\n                noValidate\r\n                onChange={this.handleChange}\r\n                 \r\n              />\r\n               {formErrors.experience.length>0 && (\r\n                  <span className=\"errorMessage\">{formErrors.experience}</span>\r\n              )}\r\n            </div>\r\n            \r\n            <div className=\"email\">\r\n              <TextField\r\n              variant=\"outlined\"\r\n                label=\"Eg: Software Engineer\"\r\n               autoComplete=\"off\"\r\n                type=\"text\"\r\n                name=\"role\"\r\n                noValidate\r\n                onChange={this.handleChange}\r\n            />    \r\n                 {formErrors.role.length>0 && (\r\n                  <span className=\"errorMessage\">{formErrors.role}</span>\r\n              )}\r\n            </div>\r\n            <div  style={{width:\"100%\"}}>\r\n            <>\r\n              <div>\r\n              <div >\r\n                <TextField\r\n                label=\"Enter Previous TeamName\"\r\n                variant=\"outlined\"\r\n                style={{width:\"800px\",marginRight:\"10px\"}}\r\n                  type=\"text\"\r\n                  \r\n                  value={this.state.newItem}\r\n                  onChange={e => this.updateInput(\"newItem\", e.target.value)}\r\n                />\r\n                <Button\r\n                  className=\"btn\"\r\n                  color=\"primary\"\r\n                  variant=\"contained\"\r\n                  onClick={() => this.addItem()}\r\n                  disabled={!this.state.newItem.length}\r\n                >\r\n                  <i className=\"material-icons\" style={{marginTop:\"10px\",paddingBottom:\"5px\"}}>Add Team-Name</i>\r\n                </Button>\r\n                <br /> <br />\r\n                <ol>\r\n                  {this.state.list.map(item => {\r\n                    return (\r\n                      <ListItem style={{border:\"1px solid black\",width:\"700px\",borderRadius:\"5px\"}} key={item.key}>\r\n                          <ListItemIcon>\r\n                              <GroupIcon color=\"primary\"/>\r\n                          </ListItemIcon>\r\n                          <ListItemText key={item.key} primary={\"TeamName:  \"+item.value}/>\r\n                          <Button color=\"secondary\">{<DeleteIcon fontSize=\"small\" onClick={()=>this.deleteItem(item.id)} />}</Button>\r\n                      </ListItem>\r\n                    );\r\n                  })}\r\n                </ol>\r\n              </div>\r\n            </div>\r\n            </>\r\n            </div>\r\n            <Button variant=\"outlined\" onClick={this.printDatas}>\r\n                click me\r\n            </Button>\r\n          </form>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default TeamDetails;"]},"metadata":{},"sourceType":"module"}